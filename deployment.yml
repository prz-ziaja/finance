apiVersion: apps/v1
kind: Deployment
metadata:
  name: website
  labels:
    app: website
spec:
  replicas: 2
  selector:
    matchLabels:
      app: website
  template:
    metadata:
      labels:
        app: website
    spec:
      containers:
      - name: website
        image: docker.io/library/spfinance:latest
        imagePullPolicy: Never
        command: ["python"]
        args: ["SPFinance/scraper/run.py", "--plugin-name offline.offlineScraper", "--configuration-getter-name file_configuration_getter", "--db-host localhost", "--objects-to-scrap AAPL NVDA", "--start-datetime 2023.12.02T19:22:22", "--end-datetime 2024.01.01T12:38:22"]
        ports:
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  labels:
    app: postgresql
    tier: database
spec:
  selector:
    matchLabels:
      app: postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgresql
        tier: database
    spec:
      containers:
        - name: postgresql
          image: postgres:16.1-alpine3.19
          imagePullPolicy: "IfNotPresent"
          env:
            - name: POSTGRES_DB
              value: finance
            - name: POSTGRES_USER
              value: root
            - name: POSTGRES_PASSWORD
              value: root
          ports:
            - containerPort: 5432
              name: postgresql
          volumeMounts:
            #- name: postgresql-claim0
            #  mountPath: /var/lib/postgresql/data

            - mountPath: /docker-entrypoint-initdb.d
              name: postgresql-initdb
      volumes:
        #- name: postgresql-claim0
        #  persistentVolumeClaim:
        #    claimName: postgresql-claim0

        - name: postgresql-initdb
          configMap:
            name: sql-commands